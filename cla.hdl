CHIP cla
{
    IN x[4],y[4],c0;
    OUT sumbit[4],nextcarry,prevcarry;
    
    PARTS:
        And(a=x[0], b=y[0], out=g0);
        And(a=x[1], b=y[1], out=g1);
        And(a=x[2], b=y[2], out=g2);
        And(a=x[3], b=y[3], out=g3);


        Xor(a=x[0], b=y[0], out=p0);
        Xor(a=x[1], b=y[1], out=p1);
        Xor(a=x[2], b=y[2], out=p2);
        Xor(a=x[3], b=y[3], out=p3);

        //0 and 1bit 
        Not(in=c0, out=notc0);
        And(a=c0, b=notc0, out=zero);
        Or(a=c0, b=notc0, out=one);

        // for c1

        And(a=p0, b=c0, out=temp0);
        Or(a=temp0, b=g0, out=c1);

        //for c2

        // And(a=p1, b=p0, out=temp1);
        // And(a=temp1, b=c0, out=temp2);
        // And(a=p1, b=g0, out=temp3);
        // Or(a=temp1, b=temp2, out=f1);
        // Or(a=f1, b=g1, out=c2);
        Andfin(a=one,b=p0,c=p1,d=one,e=c0,out=temp1);
        Andfin(a=one,b=one,c=p1,d=g0,e=one,out=temp2);
        Orfin(a=temp1,b=temp2,c=g1,d=zero,e=zero,out=c2);

        //for c3

        // orfin(in1=p0,in2=p1,in3=p2,in4=p3,out=temp25);
        // Andfin(in1=p0,in2=p1,in3=p2,in4=p3,in5=g0,out=temp25);
        
        Andfin(a=p0,b=p1,c=p2,d=c0,e=one,out=temp4);
        Andfin(a=one,b=p1,c=p2,d=g0,e=one,out=temp5);
        Andfin(a=one,b=one,c=p2,d=g1,e=one,out=temp6);
        Orfin(a=temp4,b=temp5,c=temp6,d=g2,e=zero,out=c3);

        // for c4
        Andfin(a=p0,b=p1,c=p2,d=c0,e=p3,out=temp7);
        Andfin(a=one,b=p1,c=p2,d=g0,e=p3,out=temp8);
        Andfin(a=one,b=one,c=p2,d=g1,e=p3,out=temp9);
        Andfin(a=one,b=one,c=p3,d=g2,e=one,out=temp10);
        Orfin(a=temp7,b=temp8,c=temp9,d=g3,e=temp10,out=nextcarry);


        //for pre

        Or(a=c3, b=zero, out=prevcarry);
        // for sumbit

        Xor(a=p0, b=c0, out=sumbit[0]);
        Xor(a=p1, b=c1, out=sumbit[1]);
        Xor(a=p2, b=c2, out=sumbit[2]);
        Xor(a=p3, b=c3, out=sumbit[3]);
}   